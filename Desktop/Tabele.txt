CREATE TABLE ISSUESLISTS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL
);
COMMIT;

CREATE TABLE ISSUES (
    ID SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    ASSIGNED_TO_USER_ID BIGINT,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUES(ID)
);

INSERT INTO ISSUESLISTS (NAME) VALUES
    ('ToDo'),
    ('In progress'),
    ('Done');
COMMIT ;
show tables;
SELECT * FROM ISSUESLISTS;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, ASSIGNED_TO_USER_ID) VALUES
    (1, 'Task 1 for ToDo', 'Description for Task 1', 1),
    (1, 'Task 2 for ToDo', 'Description for Task 2', 2),
    (1, 'Task 3 for ToDo', 'Description for Task 3', 3),
    (1, 'Task 4 for ToDo', 'Description for Task 4', 4),
    (1, 'Task 5 for ToDo', 'Description for Task 5', 5);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, ASSIGNED_TO_USER_ID) VALUES
    (2, 'Task 1 in progress', 'Description for Task 1', 1),
    (2, 'Task 2 in progress', 'Description for Task 2', 2),
    (2, 'Task 3 in progress', 'Description for Task 3', 3),
    (2, 'Task 4 in progress', 'Description for Task 4', 4),
    (2, 'Task 5 in progress', 'Description for Task 5', 5);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, ASSIGNED_TO_USER_ID) VALUES
    (3, 'Task 1 done', 'Description for Task 1', 1),
    (3, 'Task 2 done', 'Description for Task 2', 2),
    (3, 'Task 3 done', 'Description for Task 3', 3),
    (3, 'Task 4 done', 'Description for Task 4', 4),
    (3, 'Task 5 done', 'Description for Task 5', 5);

COMMIT;
SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

